{\rtf1\ansi\ansicpg936\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red253\green143\blue63;\red31\green31\blue36;\red252\green106\blue93;
\red255\green255\blue255;\red252\green95\blue163;\red122\green200\blue182;\red150\green134\blue245;\red145\green212\blue98;
\red153\green232\blue213;\red174\green243\blue125;}
{\*\expandedcolortbl;;\csgenericrgb\c99131\c56076\c24611;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c98912\c41558\c36568;
\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c47716\c78607\c71403;\csgenericrgb\c58752\c52717\c95948;\csgenericrgb\c56799\c83212\c38450;
\csgenericrgb\c59926\c90967\c83488;\csgenericrgb\c68215\c95290\c48909;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 7-5\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f1 \cf2 \cb3 #include \cf4 <iostream>\cf5 \

\f2\b \cf6 using
\f1\b0 \cf5  
\f2\b \cf6 namespace
\f1\b0 \cf5  \cf7 std\cf5 ;\

\f2\b \cf6 const
\f1\b0 \cf5  
\f2\b \cf6 float
\f1\b0 \cf5  PI = \cf8 3.14\cf5 ;\
\

\f2\b \cf6 class
\f1\b0 \cf5  Shape\{\

\f2\b \cf6 public
\f1\b0 \cf5 :\
    Shape()\{\}\
    ~Shape()\{\}\
    
\f2\b \cf6 virtual
\f1\b0 \cf5  
\f2\b \cf6 float
\f1\b0 \cf5  getArea()\{
\f2\b \cf6 return
\f1\b0 \cf5  -\cf8 1\cf5 ;\}\
\};\
\

\f2\b \cf6 class
\f1\b0 \cf5  Circle:
\f2\b \cf6 public
\f1\b0 \cf5  \cf9 Shape\cf5 \{\

\f2\b \cf6 public
\f1\b0 \cf5 :\
    Circle(
\f2\b \cf6 float
\f1\b0 \cf5  radius)\{\cf9 itsRadius\cf5  = radius;\}\
    ~Circle()\{\}\
    
\f2\b \cf6 float
\f1\b0 \cf5  getArea()\{
\f2\b \cf6 return
\f1\b0 \cf5  \cf9 PI\cf5 *\cf9 itsRadius\cf5 *\cf9 itsRadius\cf5 ;\}\

\f2\b \cf6 private
\f1\b0 \cf5 :\
    
\f2\b \cf6 float
\f1\b0 \cf5  itsRadius;\
\};\
\

\f2\b \cf6 class
\f1\b0 \cf5  Rectangle:
\f2\b \cf6 public
\f1\b0 \cf5  \cf9 Shape\cf5 \{\

\f2\b \cf6 public
\f1\b0 \cf5 :\
    Rectangle(
\f2\b \cf6 float
\f1\b0 \cf5  length,
\f2\b \cf6 float
\f1\b0 \cf5  width)\{\cf9 itsLength\cf5  = length;\cf9 itsWidth\cf5  = width;\}\
    ~Rectangle()\{\}\
    
\f2\b \cf6 virtual
\f1\b0 \cf5  
\f2\b \cf6 float
\f1\b0 \cf5  getArea()\{
\f2\b \cf6 return
\f1\b0 \cf5  \cf9 itsWidth\cf5 *\cf9 itsLength\cf5 ;\}\

\f2\b \cf6 private
\f1\b0 \cf5 :\
    
\f2\b \cf6 float
\f1\b0 \cf5  itsLength,itsWidth;\
\};\
\

\f2\b \cf6 class
\f1\b0 \cf5  Square:
\f2\b \cf6 public
\f1\b0 \cf5  \cf9 Rectangle\cf5 \{\

\f2\b \cf6 public
\f1\b0 \cf5 :\
    Square(
\f2\b \cf6 float
\f1\b0 \cf5  length);\
    ~Square()\{\}\

\f2\b \cf6 private
\f1\b0 \cf5 :\
    
\f2\b \cf6 float
\f1\b0 \cf5  itsLength;\
\};\
\

\f2\b \cf6 int
\f1\b0 \cf5  main()\{\
    
\f2\b \cf6 float
\f1\b0 \cf5  r,len,wid,length;\
    \cf9 Shape\cf5  *sp;\
    \cf7 cout\cf5 <<\cf4 "please enter the radius of the circle: "\cf5 <<\cf10 endl\cf5 ;\
    \cf7 cin\cf5 >>r;\
    sp = 
\f2\b \cf6 new
\f1\b0 \cf5  \cf9 Circle\cf5 (r);\
    \cf7 cout\cf5 <<\cf4 "the area of the circle is "\cf5 <<sp->\cf11 getArea\cf5 ()<<\cf10 endl\cf5 ;\
    \cf7 cout\cf5 <<\cf4 "please enter the length and the width of the rectangle: "\cf5 <<\cf10 endl\cf5 ;\
    \cf7 cin\cf5 >>len>>wid;\
    sp = 
\f2\b \cf6 new
\f1\b0 \cf5  \cf9 Rectangle\cf5 (len,wid);\
    \cf7 cout\cf5 <<\cf4 "the area of the rectangle is "\cf5 <<sp->\cf11 getArea\cf5 ()<<\cf10 endl\cf5 ;\
    \cf7 cout\cf5 <<\cf4 "please enter the length of the square: "\cf5 <<\cf10 endl\cf5 ;\
    \cf7 cin\cf5 >>length;\
    sp = 
\f2\b \cf6 new
\f1\b0 \cf5  \cf9 Square\cf5 (length);\
    \cf7 cout\cf5 <<\cf4 "the area of the square is "\cf5 <<sp->\cf11 getArea\cf5 ()<<\cf10 endl\cf5 ;\
    
\f2\b \cf6 return
\f1\b0 \cf5  \cf8 0\cf5 ;\
    \
\}\
\
\cf9 Square\cf5 ::Square(
\f2\b \cf6 float
\f1\b0 \cf5  length):\cf9 Rectangle\cf5 (length,length)\{\}\
}